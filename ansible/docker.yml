---
- name: Docker Installation Playbook
  hosts: all
  become: yes
  vars:
    docker_script_url: "https://get.docker.com"
    docker_script_path: "/tmp/get-docker.sh"

  tasks:
    - name: Check for existing Docker installation
      ansible.builtin.command: docker --version
      register: docker_check
      ignore_errors: yes
      changed_when: false

    - name: Exit if Docker exists
      ansible.builtin.fail:
        msg: "Docker already installed: {{ docker_check.stdout }}"
      when: docker_check.rc == 0

    - name: Download official Docker installer
      ansible.builtin.get_url:
        url: "{{ docker_script_url }}"
        dest: "{{ docker_script_path }}"
        mode: "0755"
      when: docker_check.rc != 0

    - name: Run Docker installer
      ansible.builtin.command: "{{ docker_script_path }}"
      register: install_result
      changed_when: "'docker is already installed' not in install_result.stdout"
      when: docker_check.rc != 0

    - name: Ensure Docker service is running
      ansible.builtin.systemd:
        name: docker
        state: started
        enabled: yes
      when: docker_check.rc != 0

    - name: Get actual remote user
      ansible.builtin.set_fact:
        remote_user: "{{ ansible_user | default(ansible_ssh_user) | default(ansible_user_id) }}"

    - name: Add remote user to docker group (if not root)
      ansible.builtin.user:
        name: "{{ remote_user }}"
        groups: docker
        append: yes
      when: 
        - docker_check.rc != 0
        - remote_user != "root"

    - name: Verify Docker components
      block:
        - name: Check Docker Engine
          ansible.builtin.command: docker --version
          register: docker_version
          changed_when: false

        - name: Check Docker Compose
          ansible.builtin.command: docker compose version
          register: compose_version
          changed_when: false

        - name: Show installation results
          ansible.builtin.debug:
            msg:
              - "Docker Engine: {{ docker_version.stdout }}"
              - "Docker Compose: {{ compose_version.stdout_lines[0] }}"
      when: docker_check.rc != 0