---
- name: Universal System Configuration Playbook
  hosts: all
  become: yes
  vars:
    journald_limit: "50M"
    package_urls:
      chrome: "https://dl.google.com/linux/direct/google-chrome-stable_current_{{
        'amd64.deb' if ansible_os_family == 'Debian' else 'x86_64.rpm'
      }}"
      rpmfusion:
        free: "https://download1.rpmfusion.org/free/el/rpmfusion-free-release-{{ ansible_distribution_major_version }}.noarch.rpm"
        nonfree: "https://download1.rpmfusion.org/nonfree/el/rpmfusion-nonfree-release-{{ ansible_distribution_major_version }}.noarch.rpm"
      mscorefonts: "https://downloads.sourceforge.net/project/mscorefonts2/rpms/msttcore-fonts-installer-2.6-1.noarch.rpm"

  tasks:
    - name: Configure journald log limits
      ansible.builtin.lineinfile:
        path: "/etc/systemd/journald.conf"
        regexp: "^SystemMaxUse="
        line: "SystemMaxUse={{ journald_limit }}"
        state: present
      notify: restart journald

    - name: Install Flatpak if not present
      block:
        - name: Install Flatpak
          ansible.builtin.package:
            name: "flatpak"
            state: present

        - name: Add Flathub remote
          ansible.builtin.command: "flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo"

    - name: Install Chrome
      block:
      - name: Download Chrome package
        ansible.builtin.get_url:
          url: "{{ package_urls.chrome }}"
          dest: "/tmp/chrome_package.{{ 'deb' if ansible_os_family == 'Debian' else 'rpm' }}"
          mode: '0644'

      - name: Install Chrome package (Debian)
        ansible.builtin.apt:
          deb: "/tmp/chrome_package.deb"
        when: ansible_os_family == 'Debian'

      - name: Install Chrome package (RHEL)
        ansible.builtin.yum:
          name: "/tmp/chrome_package.rpm"
          disable_gpg_check: yes
        when: ansible_os_family == 'RedHat'

      - name: Clean up Chrome package
        ansible.builtin.file:
          path: "/tmp/chrome_package.{{ 'deb' if ansible_os_family == 'Debian' else 'rpm' }}"
          state: absent
      when: ansible_os_family in ['Debian', 'RedHat']

    - name: Configure RHEL repositories
      block:
        - name: Install RPM Fusion free repository
          ansible.builtin.package:
            name: "{{ package_urls.rpmfusion.free }}"
            state: present

        - name: Install RPM Fusion non-free repository
          ansible.builtin.package:
            name: "{{ package_urls.rpmfusion.nonfree }}"
            state: present
      when: ansible_os_family == "RedHat"

    - name: Install Microsoft Core Fonts from Sourceforge (RHEL/Fedora)
      block:
        - name: Download mscorefonts package
          ansible.builtin.get_url:
            url: "{{ package_urls.mscorefonts }}"
            dest: "/tmp/msttcore-fonts-installer.rpm"
            mode: '0644'

        - name: Install mscorefonts package
          ansible.builtin.yum:
            name: "/tmp/msttcore-fonts-installer.rpm"
            disable_gpg_check: yes
            state: present

        - name: Clean up mscorefonts package
          ansible.builtin.file:
            path: "/tmp/msttcore-fonts-installer.rpm"
            state: absent
      when: ansible_os_family == "RedHat"

    - name: Install multimedia packages
      block:
        - name: Install RHEL codecs
          ansible.builtin.package:
            name:
              - "ffmpeg"
              - "gstreamer1-plugins-ugly"
              - "gstreamer1-plugins-bad-free"
              - "gstreamer1-plugins-bad-freeworld"
              - "gstreamer1-plugins-good"
              - "gstreamer1-plugins-base"
            state: present
          when: ansible_os_family == "RedHat"

        - name: Install Ubuntu restricted extras
          ansible.builtin.package:
            name: "ubuntu-restricted-extras"
            state: present
          when: ansible_distribution == "Ubuntu"

        - name: Install Debian codecs
          ansible.builtin.package:
            name:
              - "ffmpeg"
              - "libavcodec-extra"
              - "gstreamer1.0-libav"
              - "gstreamer1.0-plugins-ugly"
              - "gstreamer1.0-plugins-good"
              - "gstreamer1.0-plugins-bad"
            state: present
          when: ansible_os_family == "Debian"

    - name: Configure kernel module
      block:
        - name: Create modprobe config directory
          ansible.builtin.file:
            path: "/etc/modprobe.d"
            state: directory
            mode: "0755"

        - name: Set rtw88_core parameter
          ansible.builtin.lineinfile:
            path: "/etc/modprobe.d/rtw88_core.conf"
            line: "options rtw88_core disable_lps_deep=y"
            create: yes
            state: present

  handlers:
    - name: restart journald
      ansible.builtin.systemd:
        name: "systemd-journald"
        state: restarted
